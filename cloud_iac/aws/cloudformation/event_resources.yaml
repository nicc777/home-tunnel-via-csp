---
AWSTemplateFormatVersion: '2010-09-09'

Description: "IaC for https://github.com/nicc777/home-tunnel-via-csp"

#######################################################################################################################
###
###     PARAMETERS
###
#######################################################################################################################

Parameters:

  CumulusTunnelBucketNameParam:
    Type: 'String'
    MinLength: 1

  ArtifactBucketNameParam:
    Type: 'String'
    MinLength: 1

  LambdaFunctionCreatedS3KeyParam:
    Type: 'String'
    MinLength: 1
    Default: "handler_s3_object_created.zip"

  LambdaFunctionDeletedS3KeyParam:
    Type: 'String'
    MinLength: 1
    Default: "handler_s3_object_deleted.zip"

  LambdaFunctionExpiredS3KeyParam:
    Type: 'String'
    MinLength: 1
    Default: "handler_s3_object_expired.zip"

  VpcId1Param:
    Type: 'String'
    MinLength: 1

  SubnetId1Param:
    Type: 'String'
    MinLength: 1

  SubnetId2Param:
    Type: 'String'
    MinLength: 1

  SubnetId3Param:
    Type: 'String'
    MinLength: 1

  DebugParam:
    Type: 'String'
    Default: "0"
    Description: "To enable DEBUG logging for AWS Lambda function, set this value to 1"

#######################################################################################################################
###
###     RESOURCES
###
#######################################################################################################################

Resources:

  ########################################
  ###
  ### S3 BUCKET
  ###
  ########################################

  CumulusTunnelBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    DependsOn:
    - CumulusTunnelS3ObjCreatedTopic
    - CumulusTunnelS3ObjDeletedTopic
    - CumulusTunnelS3ObjExpiredTopic
    - CumulusTunnelS3ObjCreateSnsPolicy
    - CumulusTunnelS3ObjDeleteSnsPolicy
    - CumulusTunnelS3ObjExpireSnsPolicy
    Properties:
      BucketName: !Ref CumulusTunnelBucketNameParam
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
        - Id: 'ShortTermRule'
          Status: Enabled
          ExpirationInDays: 1
      NotificationConfiguration:
        TopicConfigurations:
        - Topic: !Ref CumulusTunnelS3ObjCreatedTopic
          Event: 's3:ObjectCreated:*'
        - Topic: !Ref CumulusTunnelS3ObjDeletedTopic
          Event: 's3:ObjectRemoved:*'
        - Topic: !Ref CumulusTunnelS3ObjExpiredTopic
          Event: 's3:LifecycleExpiration:*'

  CumulusTunnelBucketPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: 'Policy for reading CumulusTunnelBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: 'GeneralAccess'
          Effect: 'Allow'
          Action:
          - "s3:GetBucketLocation"
          - "s3:PutObject"
          - "s3:GetObject"
          - "s3:GetObjectAttributes"
          - "s3:GetObjectTagging"
          - "s3:PutObjectTagging"
          - "s3:DeleteObject"
          - "s3:GetObjectVersion"
          - "s3:ListBucket"
          Resource:
          - !GetAtt CumulusTunnelBucket.Arn
          - Fn::Sub:
            - "arn:aws:s3:::${BucketName}/*"
            - BucketName: !Ref CumulusTunnelBucketNameParam
        - Sid: 'DenyHttpAccess'
          Action:
          - 's3:*'
          Effect: Deny
          Resource:
          - !GetAtt CumulusTunnelBucket.Arn
          - Fn::Sub:
            - "arn:aws:s3:::${BucketName}/*"
            - BucketName: !Ref CumulusTunnelBucketNameParam
          Condition:
            Bool:
              'aws:SecureTransport': false
        - Sid: 'SnsPublishCreateEvent'
          Action:
          - 'sns:Publish'
          Effect: Allow
          Resource:
          - !Ref CumulusTunnelS3ObjCreatedTopic
        - Sid: 'SnsPublishDeleteEvent'
          Action:
          - 'sns:Publish'
          Effect: Allow
          Resource:
          - !Ref CumulusTunnelS3ObjDeletedTopic
        - Sid: 'SnsPublishExpireEvent'
          Action:
          - 'sns:Publish'
          Effect: Allow
          Resource:
          - !Ref CumulusTunnelS3ObjExpiredTopic

  ########################################
  ###
  ### LAMBDA - BASE 
  ###
  ########################################

  CumulusTunnelLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: MattermostAlertSenderLambdaFunctionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          # logging
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: arn:aws:logs:*:*:*
          # networkinterface
          - Effect: Allow
            Action:
            - "ec2:DescribeNetworkinterfaces"
            - "ec2:DeleteNetworkinterface"
            - "ec2:Describe*"
            - "ec2:DescribeVpcs"
            - "ec2:DescribeSubnets"
            - "ec2:CreateNetworkinterface"
            Resource: "*"
          # snstopic
          - Effect: Allow
            Action:
            - "sns:CreateTopic"
            - "sns:DeleteTopic"
            - "sns:Subscribe"
            - "sns:Unsubscribe"
            - "sns:Publish"
            Resource:
              !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MessagingTopic"
          # s3
          - Effect: Allow
            Action:
            - "s3:GetObject"
            Resource: "*"

  LambdaFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: General AWS Lambda function security group
      VpcId: !Ref VpcId1Param
  
  LambdaFunctionSgIpv4Egress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      CidrIp: 0.0.0.0/0
      GroupId: !GetAtt LambdaFunctionSecurityGroup.GroupId
      IpProtocol: "-1"

  LambdaFunctionSgIpv6Egress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      CidrIpv6: "::/0"
      GroupId: !GetAtt LambdaFunctionSecurityGroup.GroupId
      IpProtocol: "-1"


  ########################################
  ###
  ### SNS RESOURCES 
  ###
  ########################################

  CumulusTunnelS3ObjCreatedTopic:
    Type: AWS::SNS::Topic
    DependsOn: CumulusTunnelLambdaRole          # it first create IAM-role than the Lambda-function
    Properties:
      TopicName: "s3-object-created"

  CumulusTunnelS3ObjDeletedTopic:
    Type: AWS::SNS::Topic
    DependsOn: CumulusTunnelLambdaRole          # it first create IAM-role than the Lambda-function
    Properties:
      TopicName: "s3-object-deleted"

  CumulusTunnelS3ObjExpiredTopic:
    Type: AWS::SNS::Topic
    DependsOn: CumulusTunnelLambdaRole          # it first create IAM-role than the Lambda-function
    Properties:
      TopicName: "s3-object-expired"

  CumulusTunnelS3ObjCreateSnsPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: CumulusTunnelPolicy01
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action: sns:Publish
          Resource: !Ref CumulusTunnelS3ObjCreatedTopic
          Condition:
            ArnLike:
              aws:SourceArn: 
                Fn::Sub:
                - "arn:aws:s3:::${BucketName}"
                - BucketName: !Ref CumulusTunnelBucketNameParam
            StringEquals:
              aws:SourceAccount: !Ref AWS::AccountId
      Topics:
      - !Ref CumulusTunnelS3ObjCreatedTopic

  CumulusTunnelS3ObjDeleteSnsPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: CumulusTunnelPolicy01
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action: sns:Publish
          Resource: !Ref CumulusTunnelS3ObjDeletedTopic
          Condition:
            ArnLike:
              aws:SourceArn: 
                Fn::Sub:
                - "arn:aws:s3:::${BucketName}"
                - BucketName: !Ref CumulusTunnelBucketNameParam
            StringEquals:
              aws:SourceAccount: !Ref AWS::AccountId
      Topics:
      - !Ref CumulusTunnelS3ObjDeletedTopic

  CumulusTunnelS3ObjExpireSnsPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: CumulusTunnelPolicy01
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action: sns:Publish
          Resource: !Ref CumulusTunnelS3ObjExpiredTopic
          Condition:
            ArnLike:
              aws:SourceArn: 
                Fn::Sub:
                - "arn:aws:s3:::${BucketName}"
                - BucketName: !Ref CumulusTunnelBucketNameParam
            StringEquals:
              aws:SourceAccount: !Ref AWS::AccountId
      Topics:
      - !Ref CumulusTunnelS3ObjExpiredTopic

  S3ObjCreatedLambdaFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn: S3ObjCreatedLambdaFunction
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt S3ObjCreatedLambdaFunction.Arn
      Principal: sns.amazonaws.com


  ########################################
  ###
  ### LAMBDA FUNCTION :: OBJECT CREATED
  ###
  ########################################

  S3ObjCreatedLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: S3ObjCreatedLambdaFunction
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - "/aws/lambda/"
          - Ref: S3ObjCreatedLambdaFunction
      RetentionInDays: 7

  S3ObjCreatedLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref ArtifactBucketNameParam
        S3Key: !Ref LambdaFunctionCreatedS3KeyParam
      Description: "Lambda function to process created files"
      Handler: "handler_s3_object_created.handler"
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt CumulusTunnelLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
        - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
        - !Ref SubnetId1Param
        - !Ref SubnetId2Param
        - !Ref SubnetId3Param
      Environment:
        Variables:
          DEBUG: !Ref DebugParam  # Requires Parameter
      Runtime: python3.12
      Timeout: 300

  S3ObjCreatedSnsTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt S3ObjCreatedLambdaFunction.Arn
      Protocol: 'lambda'
      TopicArn: !GetAtt CumulusTunnelS3ObjCreatedTopic.TopicArn

  ########################################
  ###
  ### LAMBDA FUNCTION :: OBJECT DELETED
  ###
  ########################################

  S3ObjDeletedLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: S3ObjDeletedLambdaFunction
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - "/aws/lambda/"
          - Ref: S3ObjDeletedLambdaFunction
      RetentionInDays: 7

  S3ObjDeletedLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref ArtifactBucketNameParam
        S3Key: !Ref LambdaFunctionDeletedS3KeyParam
      Description: "Lambda function to process deleted files"
      Handler: "handler_s3_object_deleted.handler"
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt CumulusTunnelLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
        - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
        - !Ref SubnetId1Param
        - !Ref SubnetId2Param
        - !Ref SubnetId3Param
      Environment:
        Variables:
          DEBUG: !Ref DebugParam  # Requires Parameter
      Runtime: python3.12
      Timeout: 300

  S3ObjDeletedSnsTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt S3ObjDeletedLambdaFunction.Arn
      Protocol: 'lambda'
      TopicArn: !GetAtt CumulusTunnelS3ObjDeletedTopic.TopicArn

  ########################################
  ###
  ### LAMBDA FUNCTION :: OBJECT EXPIRED
  ###
  ########################################

  S3ObjExpiredLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: S3ObjExpiredLambdaFunction
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - "/aws/lambda/"
          - Ref: S3ObjExpiredLambdaFunction
      RetentionInDays: 7

  S3ObjExpiredLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref ArtifactBucketNameParam
        S3Key: !Ref LambdaFunctionExpiredS3KeyParam
      Description: "Lambda function to process expired files"
      Handler: "handler_s3_object_expired.handler"
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt CumulusTunnelLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
        - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
        - !Ref SubnetId1Param
        - !Ref SubnetId2Param
        - !Ref SubnetId3Param
      Environment:
        Variables:
          DEBUG: !Ref DebugParam  # Requires Parameter
      Runtime: python3.12
      Timeout: 300

  S3ObjExpiredSnsTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt S3ObjExpiredLambdaFunction.Arn
      Protocol: 'lambda'
      TopicArn: !GetAtt CumulusTunnelS3ObjExpiredTopic.TopicArn


#######################################################################################################################
###
###     OUTPUTS
###
#######################################################################################################################

Outputs:

  CumulusTunnelBucketName:
    Description: 'Name of CumulusTunnelBucket'
    Value: !Ref CumulusTunnelBucketNameParam
    Export:
      Name: CumulusTunnelBucketName

  CumulusTunnelBucketArn:
    Description: 'ARN of CumulusTunnelBucket'
    Value: !GetAtt CumulusTunnelBucket.Arn
    Export:
      Name: CumulusTunnelBucketArn

  CumulusTunnelBucketPolicyArn:
    Value: !Ref CumulusTunnelBucketPolicy
    Export:
      Name: 'CumulusTunnelBucketPolicyArn'

  
