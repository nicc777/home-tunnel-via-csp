---
AWSTemplateFormatVersion: '2010-09-09'

Description: "SQS queue to trigger Lambda Function"

#######################################################################################################################
###
###     PARAMETERS
###
#######################################################################################################################

Parameters:

  ArtifactBucketNameParam:
    Type: 'String'
    MinLength: 1

  LambdaFunctionS3KeyParam:
    Type: 'String'
    MinLength: 1
    Default: "handler_s3_object_created.zip"

  VpcId1Param:
    Type: 'String'
    MinLength: 1

  VpcCidrParam:
    Type: 'String'
    MinLength: 1

  SubnetId1Param:
    Type: 'String'
    MinLength: 1

  SubnetId2Param:
    Type: 'String'
    MinLength: 1

  SubnetId3Param:
    Type: 'String'
    MinLength: 1

  DebugParam:
    Type: 'String'
    Default: "0"
    Description: "To enable DEBUG logging for AWS Lambda function, set this value to 1"

  QueueNameParam:
    Type: 'String'
    MinLength: 1
    Description: "Unique name of the SQS Queue"

  PythonHandlerParam:
    Type: 'String'
    MinLength: 1
    Description: "The Python handler. Example value for the hello_world.py function: hello_world.handler"

  ApiCommandParam:
    Type: 'String'
    MinLength: 1
    Description: "The API command that will target this SQS and Lambda Function"


#######################################################################################################################
###
###     RESOURCES
###
#######################################################################################################################

Resources:

  ########################################
  ###
  ### SQS
  ###
  ########################################

  SqsQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      MaximumMessageSize: 1024
      MessageRetentionPeriod: 86400
      QueueName: !Ref QueueNameParam
      VisibilityTimeout: 300

  SqsQueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    DependsOn:
    - CumulusTunnelLambdaFunction
    - SqsQueue
    Properties:
      Queues:
      - !Ref SqsQueue
      PolicyDocument:
        Version: 2012-10-17
        Id: AllowLambdaToReceiveMessages
        Statement:
        - Sid: !Sub '${AWS::StackName}-SqsQueuePolicy-sid-1'
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
          Resource: !GetAtt MyQueue.Arn
        # Important to allow sending messages from other sources as well.
        - Sid: !Sub '${AWS::StackName}-SqsQueuePolicy-sid-2' 
          Effect: Allow
          Principal:
            AWS: "*" # TODO restrict this to specific ARNs for better security
          Action: sqs:SendMessage
          Resource: !GetAtt SqsQueue.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CumulusTunnelLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceArn: !GetAtt SqsQueue.Arn

  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !GetAtt CumulusTunnelLambdaFunction.Arn
      EventSourceArn: !GetAtt SqsQueue.Arn
      BatchSize: 1 # Number of messages to process in each Lambda invocation
      Enabled: true
      # MaximumBatchingWindowInSeconds: 60 # Optional: maximum time to wait to accumulate BatchSize messages
      # MaximumRetryAttempts: 3 # Optional: Maximum number of retries per batch
      # StartingPosition: Latest # Optional: Where to start reading messages (Latest or TrimHorizon)
      # ReportBatchItemFailures: true # Optional: Enable partial batch responses to handle failures in a batch
      # TumblingWindowInSeconds: 60 # Optional: Time window (in seconds) for collecting messages before invoking the function.

  

  ########################################
  ###
  ### LAMBDA - BASE 
  ###
  ########################################

  CumulusTunnelLambdaRole:
    Type: AWS::IAM::Role
    DependsOn: TunnelInstanceSecurityGroup
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole # Basic Lambda permissions
      - arn:aws:iam::aws:policy/AmazonSQSFullAccess # Needed to interact with SQS (could be more restrictive)
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: !Sub '${AWS::StackName}-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          # logging
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: arn:aws:logs:*:*:*
          # networkinterface
          - Effect: Allow
            Action:
            - "ec2:DescribeNetworkinterfaces"
            - "ec2:DeleteNetworkinterface"
            - "ec2:Describe*"
            - "ec2:DescribeVpcs"
            - "ec2:DescribeSubnets"
            - "ec2:CreateNetworkinterface"
            Resource: "*"
          # sqs
          - Effect: Allow
            Action:
            - "sqs:SendMessage"
            - "sqs:GetQueueUrl"
            Resource: "*"


  ########################################
  ###
  ### LAMBDA FUNCTION :: OBJECT CREATED
  ###
  ########################################

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: CumulusTunnelLambdaFunction
    Properties:
      LogGroupName: 
        Fn::Join:
        - ''
        - - "/aws/lambda/"
          - Ref: CumulusTunnelLambdaFunction
      RetentionInDays: 7

  CumulusTunnelLambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: TunnelInstanceSecurityGroup
    Properties:
      Code:
        S3Bucket: !Ref ArtifactBucketNameParam
        S3Key: !Ref LambdaFunctionS3KeyParam
      Description: "Lambda function for Cumulus Tunnel Command Processing"
      Handler: !Ref PythonHandlerParam
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt CumulusTunnelLambdaRole.Arn
      Environment:
        Variables:
          DEBUG: !Ref DebugParam
          ARTIFACT_BUCKET: !Ref ArtifactBucketNameParam
          COMMAND_QUEUE_URL: !Ref SqsQueue
          VPC_ID: !Ref VpcId1Param
          VPC_CIDR: !Ref VpcCidrParam
          SUBNET_1_ID: !Ref SubnetId1Param
          SUBNET_2_ID: !Ref SubnetId2Param
          SUBNET_3_ID: !Ref SubnetId3Param
      Runtime: python3.12
      Timeout: 300


#######################################################################################################################
###
###     OUTPUTS
###
#######################################################################################################################

Outputs:

  SqsQueueUrl:
    Value: !Ref SqsQueue
    Export:
      Name: !Sub '${AWS::StackName}-SqsQueueUrl'

  CumulusTunnelLambdaFunctionName:
    Value: !Ref CumulusTunnelLambdaFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionName'

  SqsAndLambdaStackName:
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub 'SqsAndLambdaStackName-${AWS::StackName}'

  PythonName:
    Value: !Ref PythonHandlerParam
    Export:
      Name: !Sub '${AWS::StackName}-PythonName'

  ApiCommandName:
    Value: !Ref ApiCommandParam
    Export:
      Name: !Sub '${AWS::StackName}-ApiCommandParam'


  
